<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Все записи блога on Антон Жиянов</title>
    <link>https://antonz.ru/posts/</link>
    <description>Recent content in Все записи блога on Антон Жиянов</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Thu, 25 Nov 2021 16:30:00 +0000</lastBuildDate><atom:link href="https://antonz.ru/posts/rss" rel="self" type="application/rss+xml" />
    <item>
      <title>Скорость алгоритмов (на котиках)</title>
      <link>https://antonz.ru/big-o/</link>
      <pubDate>Thu, 25 Nov 2021 16:30:00 +0000</pubDate>
      
      <guid>https://antonz.ru/big-o/</guid>
      <description>Давайте посмотрим, как программисты оценивают, быстро работает алгоритм или медленно. Поскольку тема максимально занудная, разбираться будем на дурацких примерах с котиками.
Константное время, O(1) Самый лучший вариант, скорость алгоритма не зависит от количества котиков.
🐾 Пример
Вы — счастливый обладатель N котиков. Каждый котик знает, как его зовут. Если позвать «Клёпа!», то прибежит только он, а остальным N-1 жопкам пофиг.
      Логарифмическое время, O(log n) На N котиках алгоритм отрабатывает за log(N) шагов.</description>
    </item>
    
    <item>
      <title>Как на самом деле устроен список в Python</title>
      <link>https://antonz.ru/list-internals/</link>
      <pubDate>Thu, 11 Nov 2021 16:18:00 +0000</pubDate>
      
      <guid>https://antonz.ru/list-internals/</guid>
      <description>Эта заметка посвящена структуре данных номер один в мире — массивам. Если вы еще не гуру алгоритмов и структур данных — гарантирую, что лучше поймете списки в питоне, их преимущества и ограничения. А если и так все знаете — освежите ключевые моменты.
Все знают, как работать со списком в питоне:
&amp;gt;&amp;gt;&amp;gt; guests = [&amp;#34;Френк&amp;#34;, &amp;#34;Клер&amp;#34;, &amp;#34;Зоя&amp;#34;] &amp;gt;&amp;gt;&amp;gt; guests[1] &amp;#39;Клер&amp;#39; Наверняка вы знаете, что выборка элемента по индексу — guests[idx] — отработает очень быстро даже на списке из миллиона элементов.</description>
    </item>
    
    <item>
      <title>Табличные выражения SQL</title>
      <link>https://antonz.ru/cte/</link>
      <pubDate>Fri, 05 Nov 2021 11:14:51 +0000</pubDate>
      
      <guid>https://antonz.ru/cte/</guid>
      <description>Прием № 1, чтобы писать хорошие читаемые SQL-запросы — это табличные выражения (CTE). Люди их боятся, а зря. Давайте разберемся за три минуты, читать увесистую книгу по SQL или проходить курсы не придется.
Проблема Допустим, у нас есть таблица продаж по месяцам за два года:
┌──────┬───────┬───────┬──────────┬─────────┐ │ year │ month │ price │ quantity │ revenue │ ├──────┼───────┼───────┼──────────┼─────────┤ │ 2019 │ 1 │ 60 │ 200 │ 12000 │ │ 2019 │ 2 │ 60 │ 660 │ 39600 │ │ 2019 │ 3 │ 60 │ 400 │ 24000 │ │ 2019 │ 4 │ 60 │ 300 │ 18000 │ │ 2019 │ 5 │ 60 │ 440 │ 26400 │ │ 2019 │ 6 │ 60 │ 540 │ 32400 │ │ 2019 │ 7 │ 60 │ 440 │ 26400 │ │ 2019 │ 8 │ 60 │ 440 │ 26400 │ │ 2019 │ 9 │ 60 │ 250 │ 15000 │ │ 2019 │ 10 │ 60 │ 420 │ 25200 │ │ .</description>
    </item>
    
    <item>
      <title>Справочник адресов России</title>
      <link>https://antonz.ru/fias/</link>
      <pubDate>Sun, 24 Oct 2021 17:02:08 +0000</pubDate>
      
      <guid>https://antonz.ru/fias/</guid>
      <description>Не все знают, что в России есть Великий Справочник Адресов, в который свято веруют все чиновники (да и не только они). Расскажу о нём немного. Без официальной нуднятины, только задорные факты из жизни.
Справочник адресов называется «ФИАС» (федеральная информационная адресная система) или «ГАР» (государственный адресный реестр) — это одно и то же. Раньше назывался «КЛАДР» (классификатор адресов). Технически поддерживает его налоговая, а данные о домах и улицах вносят местные чиновники по всей стране.</description>
    </item>
    
    <item>
      <title>Вы являетесь дизайнеру в страшном сне</title>
      <link>https://antonz.ru/tinkoff-signin/</link>
      <pubDate>Thu, 07 Oct 2021 13:49:33 +0000</pubDate>
      
      <guid>https://antonz.ru/tinkoff-signin/</guid>
      <description>Интернет-банк Тинькова при входе встречает многозначительной надписью:
  Вы являетесь держателем продуктов Тинькофф Банка. При входе по номеру телефона, в целях безопасности, введите пароль.  Я, конечно, не UX-писатель, но это жуть какая кривая формулировка. Давайте попробуем улучшить.
1. Формулируем по-человечески Меняем суконный язык банковских безопасников на нормальную речь.
Вы являетесь держателем продуктов Тинькофф Банка. При входе по номеру телефона, в целях безопасности, введите пароль.
↓  Вы — клиент Тинькофф Банка.</description>
    </item>
    
    <item>
      <title>SQLite-песочница в браузере</title>
      <link>https://antonz.ru/sqlime/</link>
      <pubDate>Tue, 28 Sep 2021 21:13:03 +0000</pubDate>
      
      <guid>https://antonz.ru/sqlime/</guid>
      <description>Чего мне всегда не хватало, так это аналога JSFiddle для SQLite. Онлайн-песочницы, в которой можно быстро проверить SQL-запрос и поделиться с другими.

Вот чего хотелось:
 Возможность загрузить готовую базу, а не писать SQL для создания таблиц. Подключать как локальные базы, так и удаленные (по url). Сохранять базу и запросы в облаке. Бесплатно и без регистрации. Свежайшая версия SQLite. Минимализм.  В итоге сделал такую песочницу сам:
 демка с пустой базой; пример заполненной базы; исходники.</description>
    </item>
    
    <item>
      <title>Как хранят данные в браузере</title>
      <link>https://antonz.ru/browser-storage/</link>
      <pubDate>Sun, 26 Sep 2021 09:36:07 +0000</pubDate>
      
      <guid>https://antonz.ru/browser-storage/</guid>
      <description>Поговорим о том, как люди хранили данные в браузере, от мохнатой древности до нашего времени.
1. Куки Первые инженеры, едва переодевшись из шкур в неопрятные свитера, попытались использовать родной и привычный HTTP-протокол. Проблема в том, что он не хранит состояние (stateless) — пять запросов от Алисы выглядят точно так же, как пять запросов от пяти разных людей.
Что же делать? В любой непонятной ситуации придумывай костыль! Так появились куки (cookie). Это пары строк (ключ — значение), которые браузер гоняет на сервер с каждым запросом.</description>
    </item>
    
    <item>
      <title>Признать проблему</title>
      <link>https://antonz.ru/acknowledge/</link>
      <pubDate>Thu, 09 Sep 2021 10:32:08 +0000</pubDate>
      
      <guid>https://antonz.ru/acknowledge/</guid>
      <description>Иногда продукты работают хуже, чем могли бы, потому что команда отказывается признавать проблемы. Давайте посмотрим, как это бывает.
Письма о заказе Представьте ситуацию. Вы работаете в крупном маркетплейсе. Люди делают на маркетплейсе заказы, он доставляет. А по факту доставки одного заказа присылает шесть писем:
    Заказ доставлен Электронный чек по 1-й части заказа Электронный чек по 2-й части заказа Электронный чек по 3-й части заказа Электронный чек по 4-й части заказа Вы довольны доставкой?</description>
    </item>
    
    <item>
      <title>Почтовые адреса в интерфейсе</title>
      <link>https://antonz.ru/postal-address/</link>
      <pubDate>Mon, 06 Sep 2021 14:32:41 +0000</pubDate>
      
      <guid>https://antonz.ru/postal-address/</guid>
      <description>Моя вынужденно-любимая тема! Поговорим о том, как работать с почтовыми адресами в интерфейсах. Вот что я об этом думаю (1–3 обязательно, 4–6 по необходимости и возможности):
1. Спрашивать адрес одним полем Не мучайте людей, заставляя их вводить «регион», «город», «населенный пункт» и «улицу». Достаточно одного поля с автодополнением от Дадаты, Яндекса или хотя бы Гугла.
  2. Автоматически определять индекс У нас не США, люди часто не помнят свой почтовый индекс.</description>
    </item>
    
    <item>
      <title>Что должно быть в письме о заказе</title>
      <link>https://antonz.ru/order-confirmation/</link>
      <pubDate>Thu, 15 Jul 2021 15:57:34 +0000</pubDate>
      
      <guid>https://antonz.ru/order-confirmation/</guid>
      <description>Если продаете товары с доставкой курьером — наверняка отправляете клиентам емейл или смс после того, как заказ оформлен. Все так делают.
Но не у всех это письмо полезно клиенту.
Плохо Например, «Деликатеска» присылает такую простыню:
 Здравствуйте, вам нужно больше читать, поэтому вот    Тут и правила всего на свете, и мое имя и телефон (спасибо, а то вечно забываю), и бесконечный список заказанных товаров (на скриншоте я его обрезал), и даже призыв защитить природу в финале.</description>
    </item>
    
  </channel>
</rss>
