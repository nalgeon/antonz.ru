<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dadata on Антон Жиянов</title><link>https://antonz.ru/tags/dadata/</link><description>Recent content in dadata on Антон Жиянов</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Mon, 06 Sep 2021 14:32:41 +0000</lastBuildDate><atom:link href="https://antonz.ru/tags/dadata/index.xml" rel="self" type="application/rss+xml"/><item><title>Почтовые адреса в интерфейсе</title><link>https://antonz.ru/postal-address/</link><pubDate>Mon, 06 Sep 2021 14:32:41 +0000</pubDate><guid>https://antonz.ru/postal-address/</guid><description>Моя вынужденно-любимая тема! Поговорим о том, как работать с почтовыми адресами в интерфейсах. Вот что я об этом думаю (1–3 обязательно, 4–6 по необходимости и возможности):
1. Спрашивать адрес одним полем Не мучайте людей, заставляя их вводить «регион», «город», «населенный пункт» и «улицу». Достаточно одного поля с автодополнением от Дадаты, Яндекса или хотя бы Гугла.
2. Автоматически определять индекс У нас не США, люди часто не помнят свой почтовый индекс.</description></item><item><title>Слишком простое решение</title><link>https://antonz.ru/too-simple/</link><pubDate>Tue, 02 Mar 2021 14:19:02 +0000</pubDate><guid>https://antonz.ru/too-simple/</guid><description>Хорошие продакты, дизайнеры и инженеры любят простые решения — при условии, что они подходят пользователям. Но иногда можно сделать даже проще, чем думаешь.
Пример из жизни. Мы в «Дадате» в основном работаем с юрлицами, а эти ребята умеют платить только по счету.
Мне в свое время категорически не хотелось тратить время на модуль выставления счетов, поэтому прошерстил весь рунет в поисках подходящего сервиса. Нашел миллион сайтов с конструкторами счетов, но только один с API — «Финолог».</description></item><item><title>Аптайм на статус-странице</title><link>https://antonz.ru/status-page/</link><pubDate>Fri, 08 Jan 2021 15:06:47 +0000</pubDate><guid>https://antonz.ru/status-page/</guid><description>Есть такая штука у облачных сервисов — «статус-страница». Это отдельный, независимый от основного сайт, на котором написано, работает основной сервис или нет.
Статус-страница полезна, когда основной сервис свалился под ддос-атакой или от веселого пятничного обновления. Так пользователям есть куда пойти, чтобы понять масштаб проблемы и ход решения.
У большинства сервисов статус-страница сделана по такому шаблону:
Общий статус (работает / нет) Статус отдельных сервисов (сайт, мобильное приложение, API, &amp;hellip;) Список инцидентов.</description></item><item><title>Тарифный план «свяжитесь с нами»</title><link>https://antonz.ru/pricing-contact-us/</link><pubDate>Mon, 11 Feb 2019 13:18:13 +0000</pubDate><guid>https://antonz.ru/pricing-contact-us/</guid><description>Облачные сервисы для бизнеса обычно делают несколько тарифов с понятной ценой и один топовый в стиле «свяжитесь с нами».
Вот «Интерком» предлагает «chat with us» А вот Airtable рисует звёздочки вместо ценника У «Дадаты» тоже так было:
Свяжитесь с нами, чтобы узнать, сколько стоит получить все-все фичи Не берусь судить, насколько такой подход хорош или плох в общем случае. Наверняка, у «Интеркома» и «Эйртейбла» он оправдан.</description></item><item><title>Автокомплит и проверка данных</title><link>https://antonz.ru/suggestions-vs-validation/</link><pubDate>Mon, 04 Jun 2018 17:29:32 +0000</pubDate><guid>https://antonz.ru/suggestions-vs-validation/</guid><description>Чтобы помочь человеку правильно ввести сложные данные, часто используют автокомплит (он же «подсказки»):
Например, по адресу Или по компании Когда программист видит автокомплит — немедленно совмещает его с проверкой. Программист думает так:
Если пользователь хочет ввести что-то непредусмотренное автокомплитом, следует сурово его покарать.
Нельзя допустить, чтобы человек вводил отсебятину, думает программист:
Плохой адрес, плохой. Уходи, негодный человек! Люди спокойно вешают такие проверки на формы заказа в интернет-магазинах, например.</description></item><item><title>Угадайка и неленивый интерфейс</title><link>https://antonz.ru/guess/</link><pubDate>Tue, 28 Nov 2017 16:03:48 +0000</pubDate><guid>https://antonz.ru/guess/</guid><description>Ленивые интерфейсы любят выносить мозг. В любой ситуации, когда можно догадаться самостоятельно или спросить человека — ленивая программа предпочитает спросить. Давайте посмотрим, как этого избежать.
Угадайка Вот Мейлчимп требует, чтобы человек рассказал, где что лежит:
Ну невозможно же догадаться, где здесь имя, а где телефон, правда? Когда мы проектировали «Дадату», сразу хотели сделать нормально. В результате появилась угадайка типов:
Человек загружает файл, а Дадата сама расставляет типы на столбцах и просит проверить.</description></item><item><title>Никто не читает требования</title><link>https://antonz.ru/specs/</link><pubDate>Thu, 23 Nov 2017 11:33:28 +0000</pubDate><guid>https://antonz.ru/specs/</guid><description>Раньше я писал требования по Коберну с Вигерсом. Действующие лица, основной сценарий, альтернативные, глоссарий, развесистая структура спецификации, вот это всё.
Отличные требования. Одна проблема с ними — никто не читает. Это странно, у нас же типа инженерная профессия, должны люди внимательно читать спецификации. Но вот не читают. Гады.
Потом мне как-то прислали такую же чужую спеку на ознакомление, я прочёл и понял, что не понял. И не хочу понимать (хотя пришлось себя заставить, да).</description></item></channel></rss>