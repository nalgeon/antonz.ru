<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>данные on Антон Жиянов</title><link>https://antonz.ru/tags/data/</link><description>Recent content in данные on Антон Жиянов</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Fri, 05 Nov 2021 11:14:51 +0000</lastBuildDate><atom:link href="https://antonz.ru/tags/data/index.xml" rel="self" type="application/rss+xml"/><item><title>Табличные выражения SQL</title><link>https://antonz.ru/cte/</link><pubDate>Fri, 05 Nov 2021 11:14:51 +0000</pubDate><guid>https://antonz.ru/cte/</guid><description>Прием № 1, чтобы писать хорошие читаемые SQL-запросы — это табличные выражения (CTE). Люди их боятся, а зря. Давайте разберемся за три минуты, читать увесистую книгу по SQL или проходить курсы не придется.
Проблема Допустим, у нас есть таблица продаж по месяцам за два года:
┌──────┬───────┬───────┬──────────┬─────────┐ │ year │ month │ price │ quantity │ revenue │ ├──────┼───────┼───────┼──────────┼─────────┤ │ 2019 │ 1 │ 60 │ 200 │ 12000 │ │ 2019 │ 2 │ 60 │ 660 │ 39600 │ │ 2019 │ 3 │ 60 │ 400 │ 24000 │ │ 2019 │ 4 │ 60 │ 300 │ 18000 │ │ 2019 │ 5 │ 60 │ 440 │ 26400 │ │ 2019 │ 6 │ 60 │ 540 │ 32400 │ │ 2019 │ 7 │ 60 │ 440 │ 26400 │ │ 2019 │ 8 │ 60 │ 440 │ 26400 │ │ 2019 │ 9 │ 60 │ 250 │ 15000 │ │ 2019 │ 10 │ 60 │ 420 │ 25200 │ │ .</description></item><item><title>Справочник адресов России</title><link>https://antonz.ru/fias/</link><pubDate>Sun, 24 Oct 2021 17:02:08 +0000</pubDate><guid>https://antonz.ru/fias/</guid><description>Не все знают, что в России есть Великий Справочник Адресов, в который свято веруют все чиновники (да и не только они). Расскажу о нём немного. Без официальной нуднятины, только задорные факты из жизни.
Справочник адресов называется «ФИАС» (федеральная информационная адресная система) или «ГАР» (государственный адресный реестр) — это одно и то же. Раньше назывался «КЛАДР» (классификатор адресов). Технически поддерживает его налоговая, а данные о домах и улицах вносят местные чиновники по всей стране.</description></item><item><title>Как хранят данные в браузере</title><link>https://antonz.ru/browser-storage/</link><pubDate>Sun, 26 Sep 2021 09:36:07 +0000</pubDate><guid>https://antonz.ru/browser-storage/</guid><description>Поговорим о том, как люди хранили данные в браузере, от мохнатой древности до нашего времени.
1. Куки Первые инженеры, едва переодевшись из шкур в неопрятные свитера, попытались использовать родной и привычный HTTP-протокол. Проблема в том, что он не хранит состояние (stateless) — пять запросов от Алисы выглядят точно так же, как пять запросов от пяти разных людей.
Что же делать? В любой непонятной ситуации придумывай костыль! Так появились куки (cookie). Это пары строк (ключ — значение), которые браузер гоняет на сервер с каждым запросом.</description></item><item><title>Найти группы похожих объектов с помощью SQL</title><link>https://antonz.ru/sql-groups/</link><pubDate>Sun, 06 Jun 2021 14:47:53 +0000</pubDate><guid>https://antonz.ru/sql-groups/</guid><description>Бывает, есть множество объектов с разными свойствами, и хочется идентифицировать группы похожих:
объединить людей с одинаковым ФИО и адресами-телефонами в клиентской базе; сегментировать покупателей магазина по товарам, которые они приобрели; определить персоны в зависимости от сценариев, по которым люди взаимодействуют с сервисом. Давайте посмотрим, как решить эту задачу на «голом» SQL.
Постановка задачи Рассмотрим на конкретном примере. Есть таблица attributes с атрибутами пользователей:
┌─────────┬─────────┐ │ user_id │ attr │ ├─────────┼─────────┤ │ 1 │ alpha │ │ 1 │ beta │ │ 2 │ beta │ │ 2 │ gamma │ │ 3 │ delta │ │ 3 │ epsilon │ │ 4 │ delta │ │ 4 │ zeta │ │ 5 │ alpha │ │ 5 │ zeta │ │ 6 │ iota │ │ 7 │ iota │ │ 7 │ kappa │ │ 8 │ kappa │ │ 8 │ lambda │ └─────────┴─────────┘ Хотим объединить пользователей в группы.</description></item><item><title>Оконные функции: скользящие агрегаты</title><link>https://antonz.ru/window-rolling/</link><pubDate>Thu, 13 May 2021 14:06:22 +0000</pubDate><guid>https://antonz.ru/window-rolling/</guid><description>Это пятая, заключительная статья из серии Оконные функции в картинках. Рекомендую не просто читать, а проходить курс — с ним знания превратятся в навыки.
Скользящие агрегаты — это те же сумма и среднее. Только рассчитывают их не по всем элементам набора, а более хитрым способом.
Разберемся на примерах. Здесь возьмем другую табличку — expenses. Она показывает доходы и расходы одного из сотрудников (пусть это будет Марина) за 9 месяцев 2020 года:</description></item><item><title>Оконные функции: агрегация</title><link>https://antonz.ru/window-aggregate/</link><pubDate>Thu, 29 Apr 2021 14:44:36 +0000</pubDate><guid>https://antonz.ru/window-aggregate/</guid><description>Это четвертая статья из серии Оконные функции в картинках. Рекомендую не просто читать, а проходить курс — с ним знания превратятся в навыки.
Агрегация — это когда мы считаем суммарные или средние показатели. Например, среднюю зарплату по каждому региону или количество золотых медалей у каждой страны в зачете Олимпийских игр.
Мы будем агрегировать данные по сотрудникам из таблички employees:
┌────┬──────────┬────────┬────────────┬────────┐ │ id │ name │ city │ department │ salary │ ├────┼──────────┼────────┼────────────┼────────┤ │ 11 │ Дарья │ Самара │ hr │ 70 │ │ 12 │ Борис │ Самара │ hr │ 78 │ │ 21 │ Елена │ Самара │ it │ 84 │ │ 22 │ Ксения │ Москва │ it │ 90 │ │ 23 │ Леонид │ Самара │ it │ 104 │ │ 24 │ Марина │ Москва │ it │ 104 │ │ 25 │ Иван │ Москва │ it │ 120 │ │ 31 │ Вероника │ Москва │ sales │ 96 │ │ 32 │ Григорий │ Самара │ sales │ 96 │ │ 33 │ Анна │ Москва │ sales │ 100 │ └────┴──────────┴────────┴────────────┴────────┘ сумма по секции, фильтрация, описание окна, функции агрегации.</description></item><item><title>Оконные функции: смещение</title><link>https://antonz.ru/window-offset/</link><pubDate>Mon, 19 Apr 2021 09:49:43 +0000</pubDate><guid>https://antonz.ru/window-offset/</guid><description>Это третья статья из серии Оконные функции в картинках. Рекомендую не просто читать, а проходить курс — с ним знания превратятся в навыки.
Сравнение со смещением — это когда мы смотрим, в чем разница между соседними значениями. Например, сравниваем страны, которые занимают 5 и 6 место в мировом рейтинге ВВП — сильно ли отличаются? А если сравнить 1 и 6 место?
Сюда же попадают задачи, в которых мы сравниваем значение из набора с границами набора.</description></item><item><title>Книга по визуализации данных</title><link>https://antonz.ru/dataviz-guide/</link><pubDate>Sun, 11 Apr 2021 08:37:39 +0000</pubDate><guid>https://antonz.ru/dataviz-guide/</guid><description>На днях я наткнулся на идеальное руководство по инфографике и визуализации данных:
основано на работах Эдварда Тафти и Стивена Фью; подробное, но не слишком многословное (150 страниц); практичное и с кучей примеров (197 иллюстраций). Книга рассказывает, как строить понятные отчеты и дашборды, на основе которых люди смогут принимать решения:
Как сформулировать и донести сообщение. Как выбрать подходящую диаграмму. Как должен выглядеть каждый элемент диаграммы. Как избежать визуального мусора и повысить информационную плотность.</description></item><item><title>Всем SQL</title><link>https://antonz.ru/lets-sql/</link><pubDate>Tue, 06 Apr 2021 10:58:56 +0000</pubDate><guid>https://antonz.ru/lets-sql/</guid><description>Помню, лет десять назад американские СМИ захватила идея, что «каждый должен научиться программировать». Повсеместно открывались буткампы из серии «от нуля до сеньор-разработчика за 10 дней», и даже президент США делал вид, что учится писать на джаваскрипте.
Я не уверен, что программирование нужно прямо так уж всем. И точно не стоит всем бросаться учить джаваскрипт: для автоматизации повседневной работы есть более подходящие языки.
А вот что имеет смысл освоить — так это прикладной анализ данных.</description></item><item><title>Оконные функции: ранжирование</title><link>https://antonz.ru/window-ranking/</link><pubDate>Mon, 05 Apr 2021 08:48:00 +0000</pubDate><guid>https://antonz.ru/window-ranking/</guid><description>Это вторая статья из серии Оконные функции в картинках. Рекомендую не просто читать, а проходить курс — с ним знания превратятся в навыки.
В этой части будем решать задачу ранжирования. Ранжирование — это всевозможные рейтинги, начиная от призеров чемпионата мира по плаванию и заканчивая Forbes 500. Мы же будем ранжировать сотрудников компании.
Будем работать с игрушечной таблицей employees, вот такой:
┌────┬──────────┬────────┬────────────┬────────┐ │ id │ name │ city │ department │ salary │ ├────┼──────────┼────────┼────────────┼────────┤ │ 11 │ Дарья │ Самара │ hr │ 70 │ │ 12 │ Борис │ Самара │ hr │ 78 │ │ 21 │ Елена │ Самара │ it │ 84 │ │ 22 │ Ксения │ Москва │ it │ 90 │ │ 23 │ Леонид │ Самара │ it │ 104 │ │ 24 │ Марина │ Москва │ it │ 104 │ │ 25 │ Иван │ Москва │ it │ 120 │ │ 31 │ Вероника │ Москва │ sales │ 96 │ │ 32 │ Григорий │ Самара │ sales │ 96 │ │ 33 │ Анна │ Москва │ sales │ 100 │ └────┴──────────┴────────┴────────────┴────────┘ рейтинг зарплат, рейтинг зарплат по департаментам, группы по зарплате, функции ранжирования.</description></item></channel></rss>